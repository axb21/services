#
# A place to modify the Nuxeo database with SQL statements.
# See https://doc.nuxeo.com/display/ADMINDOC/VCS+Configuration#VCSConfiguration-DatabaseCreationOption
# or https://doc.nuxeo.com/nxdoc/repository-configuration/#page-title
#

#CATEGORY: first

#
# Create the text search configuration for accent-insensitive full text search.
# See also: <fulltext> element in proto-repo-config.xml.
#

# Uh oh, superuser privileges are needed to install the unaccent extension,
# so the below statement won't execute as the nuxeo user.
# CREATE EXTENSION IF NOT EXISTS unaccent;
# Instead just check if the unaccent extension is installed, and fail with a
# useful error message if it's not.

#TEST:
SELECT 1 FROM pg_extension WHERE extname = 'unaccent';

#IF: emptyResult
LOG.FATAL The postgres unaccent extension must be installed in all nuxeo repository databases. To fix this, connect to each nuxeo repository database (those owned by a nuxeo_* user) as a superuser, and execute the statement "CREATE EXTENSION unaccent;". Then restart tomcat.

DO $$
BEGIN
	IF NOT EXISTS (SELECT 1 FROM pg_ts_config WHERE cfgname = 'unaccent_english') THEN
		CREATE TEXT SEARCH CONFIGURATION unaccent_english ( COPY = english );
		ALTER TEXT SEARCH CONFIGURATION unaccent_english
			ALTER MAPPING FOR asciihword, asciiword, hword_asciipart, hword, hword_part, word
			WITH unaccent, english_stem;
	END IF;
END $$;

#CATEGORY: afterTableCreation

#
# Add a unique constraint to the report 'name' column of the reports_common table.
#
LOG.INFO Adding a unique constraint to the report 'name' column of the reports_common table

#TEST:
SELECT constraint_name FROM information_schema.constraint_column_usage WHERE table_name = 'reports_common' AND constraint_name = 'reportname_unique';

#IF: emptyResult
ALTER TABLE reports_common add CONSTRAINT reportname_unique UNIQUE (name);

#
# Add a unique constraint to the batch job 'name' column of the batch_common table.
#
LOG.INFO Adding a unique constraint to the batch 'name' column of the batch_common table

#TEST:
SELECT constraint_name FROM information_schema.constraint_column_usage WHERE table_name = 'batch_common' AND constraint_name = 'batchname_unique';

#IF: emptyResult
ALTER TABLE batch_common add CONSTRAINT batchname_unique UNIQUE (name);
